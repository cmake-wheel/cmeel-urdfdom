name: Release on GitHub & PyPI

on:
  push:
    tags:
      - "v*"

jobs:
  linux_x86_64:
    name: "linux x86_64"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'
      - run: python -m pip install -U pip
      - run: python -m pip install cmeel
      - run: python -m cmeel docker -Ui quay.io/pypa/manylinux2014_x86_64
      - uses: actions/upload-artifact@v3
        with:
          path: wh

  linux_aarch64:
    name: "linux aarch64"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - run: python -m pip install -U pip
      - run: python -m pip install cmeel
      - run: python -m cmeel docker -Ui quay.io/pypa/manylinux2014_aarch64
      - uses: actions/upload-artifact@v3
        with:
          path: wh
  macos_x86_64:
    name: "macos x86_64"
    runs-on: "macos-10.15"
    env:
      SYSTEM_VERSION_COMPAT: 0
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'
      - run: python -m pip install -U pip
      - run: python -m pip wheel -vw wh .
      - uses: actions/upload-artifact@v3
        with:
          path: wh

  release:
    needs: ["linux_x86_64", "linux_aarch64", "macos_x86_64"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'
      - uses: actions/download-artifact@v3
      - run: python -m pip install twine
      - run: python -m twine upload -u __token__ -p "${{ secrets.PYPI_TOKEN }}" artifact/cmeel_urdfdom-*.whl
      - run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - run: gh release create -t "Release ${{ env.TAG}}" "${{ env.TAG }}" artifact/cmeel_urdfdom-*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
